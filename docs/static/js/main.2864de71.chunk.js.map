{"version":3,"sources":["images/react-movie-logo.svg","images/tmdb_logo.svg","components/Header/Header.styles.js","components/Header/index.js","config.js","API.js","hooks/useHomeFetch.js","images/no_image.jpg","components/Button/Button.styles.js","components/Button/index.js","components/Grid/Grid.styles.js","components/Grid/index.js","components/HeroImage/HeroImage.styles.js","components/HeroImage/index.js","components/SearchBar/Searchbar.styles.js","images/search-icon.svg","components/SearchBar/index.js","components/Spinner/index.js","components/Spinner/Spinner.styles.js","components/Thumb/Thumb.styles.js","components/Thumb/index.js","components/Home.js","components/BreadCrumb/BreadCrumb.styles.js","components/BreadCrumb/index.js","components/MovieInfo/MovieInfo.styles.js","components/MovieInfo/index.js","helpers.js","components/MovieInfoBar/MovieInfoBar.styles.js","components/MovieInfoBar/index.js","components/Actor/Actor.styles.js","components/Actor/index.js","components/Movie.js","hooks/useMovieFetch.js","components/NotFound.js","GlobalStyle.js","App.js","index.js"],"names":["Wrapper","styled","div","Content","LogoImg","img","TMDBLogoImg","Header","to","src","RMDBLogo","alt","TMDBLogo","API_URL","API_KEY","process","SEARCH_BASE_URL","POPULAR_BASE_URL","REQUEST_TOKEN_URL","LOGIN_URL","SESSION_ID_URL","IMAGE_BASE_URL","BACKDROP_SIZE","POSTER_SIZE","defaultConfig","method","headers","apiSettings","fetchMovies","searchTerm","page","a","endpoint","fetch","json","fetchMovie","movieId","fetchCredits","creditsEndpoint","getRequestToken","reqToken","request_token","authenticate","requestToken","username","password","bodyData","body","JSON","stringify","success","sessionId","rateMovie","value","rating","initialState","results","total_pages","total_results","Button","text","callback","type","onClick","prototypes","PropTypes","string","func","Grid","header","children","image","Text","HeroImage","title","SearchBar","setSearchTerm","useState","state","setState","initial","useRef","useEffect","current","timer","setTimeout","clearTimeout","searchIcon","placeholder","onChange","event","currentTarget","Spinner","Image","Thumb","clickable","number","bool","Home","loading","setLoading","error","setError","isLoadingMore","setIsLoadingMore","console","log","searchTerm2","API","movies","prev","useHomeFetch","backdrop_path","original_title","overview","map","movie","poster_path","NoImage","id","BreadCrumb","movieTitle","backdrop","MovieInfo","className","vote_average","directors","director","name","credit_id","object","calcTime","time","hours","Math","floor","mins","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","MovieInfoBar","budget","revenue","Actor","character","imageUrl","Movie","credits","crew","filter","member","job","actors","cast","useMovieFetch","useParams","runtime","actor","profile_path","NotFound","GlobalStyle","createGlobalStyle","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2864de71.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/react-movie-logo.42955eb6.svg\";","export default __webpack_public_path__ + \"static/media/tmdb_logo.f15b6632.svg\";","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    background: var(--darkGrey);\n    padding: 0 20px;\n`;\nexport const Content = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    max-width: var(--maxWidth);\n    padding: 20px 0;\n    margin: 0 auto;\n`;\n\nexport const LogoImg = styled.img`\n    width: 200px;\n    @media screen and (max-width: 500px) {\n        width: 150px;\n    }\n`;\n\nexport const TMDBLogoImg = styled.img`\n    width: 100px;\n    @media screen and (max-width: 500px) {\n        width: 80px;\n    }\n`;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport RMDBLogo from '../../images/react-movie-logo.svg';\nimport TMDBLogo from '../../images/tmdb_logo.svg';\n\nimport { Wrapper, Content, LogoImg, TMDBLogoImg } from './Header.styles';\n\nconst Header = () => (\n    <Wrapper>\n        <Content>\n            <Link to='/'>\n                <LogoImg src={RMDBLogo} alt=\"rmdb-logo\" />\n            </Link>\n            <TMDBLogoImg src={TMDBLogo} alt=\"tmdb-logo\" />\n        </Content>\n    </Wrapper>\n);\n\nexport default Header;","// Configuration for TMDB API\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=`;\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US`;\n// For login and voting\nconst REQUEST_TOKEN_URL = `${API_URL}authentication/token/new?api_key=${API_KEY}`;\nconst LOGIN_URL = `${API_URL}authentication/token/validate_with_login?api_key=${API_KEY}`;\nconst SESSION_ID_URL = `${API_URL}authentication/session/new?api_key=${API_KEY}`;\n\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w780';\n\nexport {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL,\n};\n","import {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL\n} from './config';\n\nconst defaultConfig = {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\n\nconst apiSettings = {\n  fetchMovies: async (searchTerm, page) => {\n    const endpoint = searchTerm\n      ? `${SEARCH_BASE_URL}${searchTerm}&page=${page}`\n      : `${POPULAR_BASE_URL}&page=${page}`;\n    return await (await fetch(endpoint)).json();\n  },\n\n  fetchMovie: async movieId => {\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n    return await (await fetch(endpoint)).json();\n  },\n  \n  fetchCredits: async movieId => {\n    const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n    return await (await fetch(creditsEndpoint)).json();\n  },\n  \n  // Bonus material below for login\n  getRequestToken: async () => {\n    const reqToken = await (await fetch(REQUEST_TOKEN_URL)).json();\n    return reqToken.request_token;\n  },\n  authenticate: async (requestToken, username, password) => {\n    const bodyData = {\n      username,\n      password,\n      request_token: requestToken\n    };\n    // First authenticate the requestToken\n    const data = await (\n      await fetch(LOGIN_URL, {\n        ...defaultConfig,\n        body: JSON.stringify(bodyData)\n      })\n    ).json();\n    // Then get the sessionId with the requestToken\n    if (data.success) {\n      const sessionId = await (\n        await fetch(SESSION_ID_URL, {\n          ...defaultConfig,\n          body: JSON.stringify({ request_token: requestToken })\n        })\n      ).json();\n      return sessionId;\n    }\n  },\n  rateMovie: async (sessionId, movieId, value) => {\n    const endpoint = `${API_URL}movie/${movieId}/rating?api_key=${API_KEY}&session_id=${sessionId}`;\n\n    const rating = await (\n      await fetch(endpoint, {\n        ...defaultConfig,\n        body: JSON.stringify({ value })\n      })\n    ).json();\n\n    return rating;\n  }\n};\n\nexport default apiSettings;\n","import { useEffect, useState } from 'react';\n\n// API\nimport API from '../API';\n\nconst initialState = {\n  page: 0,\n  results: [],\n  total_pages: 0,\n  total_results: 0  \n};\n\nexport const useHomeFetch = () => {\n    const [searchTerm, setSearchTerm] = useState('');\n    const [state, setState] = useState(initialState);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [isLoadingMore, setIsLoadingMore] = useState(false);\n    \n    console.log(searchTerm);\n    \n    const fetchMovies = async (page, searchTerm2 = '') => {\n        try {\n            setError(false);\n            setLoading(true);\n            \n            const movies = await API.fetchMovies(searchTerm2, page);\n            \n            setState(prev => ({\n                ...movies,\n                results: page > 1 ? [...prev.results, ...movies.results] : [...movies.results]  \n            }));\n        } catch (e) {\n            setError(true);\n        }\n        \n        setLoading(false);\n    }\n    \n    // Initial Render and search\n    useEffect(() => {\n        console.log('hello from use effect');\n        setState(initialState)\n        fetchMovies(1, searchTerm)\n    }, [searchTerm]);\n    \n    // Load more\n    useEffect(() => {\n        if (!isLoadingMore) {\n            return;\n        }\n        \n        fetchMovies(state.page + 1, searchTerm);\n        setIsLoadingMore(false);\n        \n    }, [isLoadingMore, searchTerm, state.page])\n    \n    return { state, loading, error, setSearchTerm, searchTerm, setIsLoadingMore }\n};\n","export default __webpack_public_path__ + \"static/media/no_image.22d2aa4d.jpg\";","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    background: var(--darkGrey);\n    width: 25%;\n    min-width: 200px;\n    height: 60px;\n    border-radius: 30px;\n    color: var(--white);\n    border: 0;\n    font-size: var(--fontBig);\n    margin: 20px auto;\n    transition: all 0.3s;\n    outline: none;\n    cursor: pointer;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    :hover {\n        opacity: 0.8;\n    }\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Wrapper } from './Button.styles';\n\nconst Button = ({ text, callback }) => (\n    <Wrapper type=\"button\" onClick={callback}>\n        {text}\n    </Wrapper>\n);\n\nButton.prototypes = {\n    text: PropTypes.string,\n    callback: PropTypes.func,\n};\n  \n\nexport default Button;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    max-width: var(--maxWidth);\n    margin: 0 auto;\n    padding: 0 20px;\n    \n    h1 {\n        color: var(--medGrey);\n        \n        @media screen and (max-width: 768px) {\n            font-size: var(--fontBig);\n        }\n    }\n`;\nexport const Content = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n    grid-gap: 2rem;\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Wrapper, Content } from './Grid.styles';\n\nconst Grid = ({ header, children }) => (\n    <Wrapper>\n        <h1>{ header }</h1>\n        <Content>{children}</Content>\n    </Wrapper>    \n);\n\nGrid.prototypes = {\n    header: PropTypes.string\n};\n\nexport default Grid;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  background: linear-gradient(\n      to bottom,\n      rgba(0, 0, 0, 0) 41%,\n      rgba(0, 0, 0, 0.65) 100%\n    ),\n    url(${({ image }) => image}), var(--darkGrey);\n  background-size: 100% cover;\n  background-position: center;\n  height: 600px;\n  position: relative;\n  animation: animateHeroImage 1s;\n  \n  @keyframes animateHeroImage {\n      from {\n          opacity: 0;\n      }\n      to {\n          opacity: 1;\n      }\n  }\n`;\n\nexport const Content = styled.div`\n    padding: 20px;\n    max-width: var(--maxWidth);\n    margin: 0 auto;\n`;\n\nexport const Text = styled.div`\n    z-index: 100;\n    max-width: 700px;\n    position: absolute;\n    bottom: 40px;\n    margin-right: 20px;\n    min-height: 100px;\n    color: var(--white);\n    \n    h1 {\n        font-size: var(--fontSuperBig);\n        \n        @media screen and (max-width: 720px) {\n            font-size: var(--fontBig);\n        }\n    }\n    \n    p {\n        font-size: var(--fontMed);\n        @media screen and (max-width: 720px) {\n            font-size: var(--fontSmall);\n        }\n    }\n    \n    @media screen and (max-width: 720px) {\n        max-width: 100%;\n    }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Styles\nimport { Wrapper, Content, Text } from './HeroImage.styles';\n\nconst HeroImage = ({ image, title, text }) => (\n    <Wrapper image={ image }>\n        <Content>\n            <Text>\n                <h1>{ title }</h1>\n                <p>{ text }</p>\n            </Text>\n        </Content>\n    </Wrapper>  \n);\n\nHeroImage.prototypes = {\n    image: PropTypes.string,\n    title: PropTypes.string,\n    text: PropTypes.string\n};\n\nexport default HeroImage;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    display: flex;\n    align-items: center;\n    height: 100px;\n    background: var(--darkGrey);\n    padding: 0 20px;\n`;\n\nexport const Content = styled.div`\n    position: relative;\n    max-width: var(--maxWidth);\n    width: 100%;\n    height: 55px;\n    background: var(--medGrey);\n    margin: 0 auto;\n    border-radius: 40px;\n    color: #FFF;\n    \n    img {\n        position: absolute;\n        height: 30px;\n        left: 15px;\n        top: 14px\n    }\n    \n    input {\n        font-size: var(--fontBig);\n        position: absolute;\n        left: 0;\n        margin: 8px 0;\n        padding: 0 0 0 60px;\n        border: 0;\n        width: 95%;\n        background: transparent;\n        height: 40px;\n        color: white;\n        \n        :focus {\n            outline: none;\n        }\n    }\n`;\n","export default __webpack_public_path__ + \"static/media/search-icon.cd820f5a.svg\";","import React, { useState, useEffect, useRef } from 'react';\n\n// Styles\nimport { Wrapper, Content } from './Searchbar.styles';\n\n// Image\nimport searchIcon from '../../images/search-icon.svg';\nimport PropTypes from 'prop-types';\n\nconst SearchBar = ({ setSearchTerm }) => {\n    const [state, setState] = useState('');\n    const initial = useRef(true);\n        \n    useEffect(() => {\n        if (initial.current) {\n            initial.current = false;\n            return;\n        }\n        \n        const timer = setTimeout(() => {\n            setSearchTerm(state)\n        }, 1000)\n        \n        return () => clearTimeout(timer);\n    }, [setSearchTerm, state]); \n    \n    return (\n        <Wrapper>\n            <Content>\n                <img src={searchIcon} alt=\"search-icon\"/>\n                <input type=\"text\" \n                       placeholder=\"Search Movie\"\n                       onChange={event => setState(event.currentTarget.value)}\n                       value={state}/>\n            </Content>\n        </Wrapper>\n    )\n};\n\nSearchBar.prototypes = {\n    setSearchTerm: PropTypes.func\n};\n\nexport default SearchBar;\n","import { Spinner } from './Spinner.styles'\n\nexport default Spinner;","import styled from 'styled-components';\n\nexport const Spinner = styled.div`\n    border: 5px solid var(--lightGrey);\n    border-top: 5px solid var(--medGrey);\n    border-radius: 50%;\n    width: 50px;\n    height: 50px;\n    animation: spin 0.8s linear infinite;\n    margin: 20px auto;\n    \n    @keyframes spin {\n        0% {\n            transform: rotate(0deg);\n        }\n        \n        100% {\n            transform: rotate(360deg);\n        }\n    }\n`;","import styled from 'styled-components';\n\nexport const Image = styled.img`\n    width: 100%;\n    max-width: 720px;\n    transition: all 0.3s;\n    object-fit: cover;\n    border-radius: 20px;\n    animation: animateThumb 0.5s;\n    \n    :hover {\n        opacity: 0.8;\n    }\n    \n    @keyframes animateThumb {\n        from {\n            opacity: 0;\n        }\n        \n        to {\n            opacity: 1;\n        }\n    }\n`;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Image } from './Thumb.styles';\nimport PropTypes from 'prop-types';\n\nconst Thumb = ({ image, movieId, clickable }) => (\n    <div>\n        {clickable ? \n        (\n            <Link to={`/${movieId}`}>\n                <Image src={image} alt=\"movie-thumb\"/>\n            </Link>\n        ) : (\n            <Image src={image} alt=\"movie-thumb\"/>\n        )}\n    </div>    \n);\n\nThumb.prototypes = {\n    image: PropTypes.string,\n    movieId: PropTypes.number,\n    clickable: PropTypes.bool,\n};\n\n\nexport default Thumb;\n","import React from 'react';\n\n// Config\nimport { POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL } from '../config';\n\n// Components\n\n// Hook\nimport { useHomeFetch } from '../hooks/useHomeFetch';\n// Image\nimport NoImage from '../images/no_image.jpg';\nimport Button from './Button';\nimport Grid from './Grid';\nimport HeroImage from './HeroImage';\nimport SearchBar from './SearchBar';\nimport Spinner from './Spinner';\nimport Thumb from './Thumb';\n\nconst Home = () => {\n    const { state, setSearchTerm, searchTerm, loading, setIsLoadingMore, error } = useHomeFetch();\n    \n    console.log(state);\n    \n    if (error) {\n        return <div>Something went wrong...</div>\n    }\n    \n    return (\n        <>\n            {!searchTerm && state.results[0] ? \n            <HeroImage \n                image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.results[0].backdrop_path}`}\n                title={state.results[0].original_title}\n                text={state.results[0].overview}\n            /> : null\n            }\n            <SearchBar setSearchTerm={setSearchTerm}/>\n            <Grid header={searchTerm ? searchTerm : 'Popular Movies'}>\n                {state.results.map(movie => (\n                    <Thumb key={movie.id}\n                           clickable\n                           image={\n                               movie.poster_path ? \n                               IMAGE_BASE_URL + POSTER_SIZE + movie.poster_path \n                               : NoImage\n                           }\n                           movieId={movie.id}/>\n                ))}\n            </Grid>\n            { loading && <Spinner/>}\n            {\n                state.page < state.total_pages && !loading && (\n                    <Button text='Load More' callback={() => setIsLoadingMore(true)}/>\n                )\n            }\n        </>\n    );\n}\n\nexport default Home;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 70px;\n    background: var(--medGrey);\n    color: #FFF;\n`;\n\nexport const Content = styled.div`\n    display: flex;\n    width: 100%;\n    max-width: var(--maxWidth);\n    padding: 0 20px;\n    \n    span {\n        font-size: var(--fontMedium);\n        color: var(--white);\n        padding-right: 10px;\n        \n        @media screen and (max-width: 768px) {\n            font-size: var(--fontSmall);\n        }\n    }\n`;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n// Styles\nimport { Wrapper, Content } from './BreadCrumb.styles';\n\nconst BreadCrumb = ({ movieTitle }) => (\n  <Wrapper>\n    <Content>\n      <Link to='/'>\n        <span>Home</span>\n      </Link>\n      <span>|</span>\n      <span>{movieTitle}</span>\n    </Content>\n  </Wrapper>\n);\n\nBreadCrumb.prototypes = {\n  movieTitle: PropTypes.string\n};\n\n\nexport default BreadCrumb;","import styled from 'styled-components';\nimport { BACKDROP_SIZE, IMAGE_BASE_URL } from '../../config';\n\nexport const Wrapper = styled.div`\n    background: ${({backdrop}) => \n        backdrop ? `url(${IMAGE_BASE_URL}${BACKDROP_SIZE}${backdrop})` \n        : '#000'\n    };\n    background-size: cover;\n    background-position: center;\n    padding: 40px 20px;\n    animation: animateMovieInfo 1s;\n    \n    @keyframes animateMovieInfo {\n        from {\n            opacity: 0;\n        }\n        \n        to {\n            opacity: 1;\n        }\n    }\n`;\n\nexport const Content = styled.div`\n    display: flex;\n    margin: 0 auto;\n    max-width: var(--maxWidth);\n    background: rgba(0, 0, 0, 0.7);\n    border-radius: 20px;\n    \n    @media screen and (max-width: 768px) {\n        display: block;\n        max-height: none;\n    }\n`;\n\nexport const Text = styled.div`\n    width: 100%;\n    padding: 20px 40px;\n    color: var(--white);\n    overflow: hidden;\n    \n    .rating-directors {\n        display: flex;\n        justify-content: flex-start;\n    }\n    \n    .score {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: 35px;\n        height: 35px;\n        background: #FFF;\n        color: #000;\n        border-radius: 50%;\n        font-weight: 800;\n        margin: 0;\n    }\n    \n    .director {\n        margin: 0 0 0 40px;\n        \n        p {\n            margin: 0;\n        }\n    }\n    \n    h1 {\n        @media screen and (max-width: 768px) {\n            font-size: var(--fontBig);\n        }\n    }\n`;\n","import React from 'react';\nimport { Content, Text, Wrapper } from './MovieInfo.styles';\nimport Thumb from '../Thumb';\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config';\nimport NoImage from '../../images/no_image.jpg';\nimport PropTypes from 'prop-types';\n\nconst MovieInfo = ({ movie }) => (\n    <Wrapper backdrop={movie?.backdrop_path}>\n        <Content>\n            <Thumb image={\n                movie?.poster_path ?\n                `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}` : \n                NoImage\n            }\n            clickable={false}>\n            </Thumb>\n            <Text>\n                <h1>{movie.title}</h1>\n                <h3>PLOT</h3>\n                <p>{movie.overview}</p>\n                \n                <div className=\"rating-directors\">\n                    <div>\n                        <h3>RATING</h3>\n                        <div className=\"score\">\n                            {movie.vote_average}\n                        </div>\n                    </div>\n                    \n                    <div className=\"director\">\n                        <h3>DIRECTOR{movie.directors > 1 ? 's' : ''}</h3>\n                        {\n                        movie.directors.map(director => (\n                            <p key={director.credit_id}>\n                                {director.name}\n                            </p>\n                        ))\n                        }\n                    </div>\n                </div>\n            </Text>\n        </Content>\n    </Wrapper>\n);\n\nMovieInfo.prototypes = {\n    movie: PropTypes.object\n};\n\nexport default MovieInfo;","// Convert time to hours and minutes\nexport const calcTime = time => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n// Convert a number to money formatting\nexport const convertMoney = money => {\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    display: flex;\n    align-items: center;\n    min-height: 100px;\n    background: var(--darkGrey);\n    padding: 0 20px;\n`;\nexport const Content = styled.div`\n    display: flex;\n    max-width: var(--maxWidth);\n    width: 100%;\n    margin: 0 auto;\n    \n    .column {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background: var(--medGrey);\n        border-radius: 20px;\n        margin: 0 20px;\n        flex: 1;\n        \n        :first-child {\n            margin-left: 0;\n        }\n        \n        :last-child {\n            margin-right: 0;\n        }\n    }\n    \n    @media screen and (max-width: 768px) {\n        display: block;\n        \n        .column {\n            margin: 20px 0;\n        }\n    }\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Helpers\nimport { calcTime, convertMoney } from '../../helpers';\n\n// Styles\nimport { Wrapper, Content } from '../MovieInfoBar/MovieInfoBar.styles';\n\nconst MovieInfoBar = ({ time, budget, revenue}) => (\n    <Wrapper>\n        <Content>\n            <div className=\"column\">\n                <p>Running time: {calcTime(time)}</p>\n            </div>  \n            <div className=\"column\">\n                <p>Budget: {convertMoney(budget)}</p>\n            </div>  \n            <div className=\"column\">\n                <p>Revenue: {convertMoney(revenue)}</p>\n            </div>        \n        </Content>\n    </Wrapper>\n);\n\nMovieInfoBar.prototypes = {\n    time: PropTypes.number,\n    budget: PropTypes.number,\n    revenue: PropTypes.number\n};\n\nexport default MovieInfoBar;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    color: var(--white);\n    background: var(--darkGrey);\n    border-radius: 20px;\n    padding: 5px;\n    text-align: center;\n    \n    h3 {\n        margin: 10px 0 0 0;\n    }\n    \n    p {\n        margin: 5px 0;\n    }\n`;\n\nexport const Image = styled.img`\n    display: block;\n    width: 100%;\n    height: 200px;\n    object-fit: cover;\n    border-radius: 15px;\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Wrapper, Image } from './Actor.styles';\n\nconst Actor = ({ name, character, imageUrl }) => (\n    <Wrapper>\n        <Image src={imageUrl} alt=\"actor-thumb\"/>\n        <h3>{name}</h3>\n        <p>{character}</p>\n    </Wrapper>\n);\n\nActor.prototypes = {\n  name: PropTypes.string,\n  character: PropTypes.string,\n  imageUrl: PropTypes.string\n};\n\nexport default Actor;\n","import React from 'react';\nimport { useMovieFetch } from '../hooks/useMovieFetch';\nimport { useParams  } from 'react-router-dom';\nimport BreadCrumb from './BreadCrumb';\nimport Spinner from './Spinner';\nimport MovieInfo from './MovieInfo';\nimport MovieInfoBar from './MovieInfoBar';\nimport Grid from './Grid';\nimport Actor from './Actor';\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../config';\nimport NoImage from '../images/no_image.jpg';\n\nconst Movie = () => {\n    const { movieId } = useParams();\n    const { state: movie, loading, error } = useMovieFetch(movieId);\n    \n    console.log(movie);\n    \n    if (loading) {\n        return <Spinner/>\n    }\n    \n    if (error) {\n        return <div>Something went wrong...</div>\n    }\n    \n    return (\n      <>\n        <BreadCrumb movieTitle={movie.original_title}></BreadCrumb>\n        <MovieInfo movie={movie}></MovieInfo>\n        <MovieInfoBar \n          budget={movie.budget} \n          revenue={movie.revenue} \n          time={movie.runtime}>\n        </MovieInfoBar>\n        <Grid header='Actors'>\n          {\n            movie.actors.map(\n              actor => (\n                <Actor\n                  key={actor.credit_id}\n                  name={actor.name}\n                  character={actor.character}\n                  imageUrl={\n                    actor.profile_path \n                    ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\n                    : NoImage\n                  }>\n                </Actor>\n              )\n            )\n          }\n        </Grid>\n      </>  \n    );\n};\n\nexport default Movie;\n","import { useEffect, useState } from 'react';\nimport API from '../API';\n\nexport const useMovieFetch = movieId => {\n    const [state, setState] = useState({});\n    const [loading, setLoading] = useState({});\n    const [error, setError] = useState(false);\n    \n    useEffect(() => {\n        const fetchMovie = async() => {\n            try {\n                setLoading(true);\n                setError(false);\n    \n                const movie = await API.fetchMovie(movieId);\n                const credits = await API.fetchCredits(movieId);\n                // Get directors only\n                const directors = credits.crew.filter(\n                    member => member.job === 'Director'\n                );\n    \n                setState({\n                    ...movie,\n                    actors: credits.cast,\n                    directors\n                });\n                \n                setLoading(false);\n            } catch (e) {\n                setError(true);\n            }\n        } \n        fetchMovie();\n    }, [movieId]);\n    \n    return { state, error, loading }\n}","import React from 'react';\n\nconst NotFound = () => <div>NotFound</div>;\n\nexport default NotFound;\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n    :root {\n        --maxWidth: 1280px;\n        --white: #FFF;\n        --lightGrey: #EEE;\n        --medGrey: #353535;\n        --darkGrey: #1C1C1C;\n        --fontSuperBig: 2.5rem;\n        --fontBig: 1.5rem;\n        --fontMed: 1.2rem;\n        --fontSmall: 1rem;\n    }    \n\n    * {\n        box-sizing: border-box;\n        font-family: 'Abel', sans-serif;\n    }\n    \n    body {\n        margin: 0;\n        padding: 0;\n        \n        h1 {\n            font-size: 2rem;\n            font-weight: 600;\n            color: var(--white);\n        }\n        \n        h3 {\n            font-size: 1.1rem;\n            font-weight: 600;\n        }\n        \n        p {\n            font-size: 1rem;\n            color: var(--white);\n        }\n    }\n`;\n","import React from 'react';\n\n// Routing\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\n// Components\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport Movie from './components/Movie';\nimport NotFound from './components/NotFound';\n\n// Styles\nimport { GlobalStyle } from './GlobalStyle';\n\nconst App = () => (\n  <Router>\n    <Header/>\n    <Routes>\n      <Route path=\"/\" element={<Home/>}></Route>\n      <Route path=\"/:movieId\" element={<Movie/>}></Route>\n      <Route path=\"/*\" element={<NotFound/>}></Route>\n    </Routes>\n    <GlobalStyle/>\n  </Router>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}